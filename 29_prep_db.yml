---
# This play updatets the Nova DB to ocata.

- name: DB preparation before ocata
  hosts: api_servers[1]
  connection: local
  gather_facts: no
  vars_files: 
    - db_test/purges.yml
    - db_test/ocata_vars.yml
  tasks:

## Minimal steps to setup cells
#mysql > create database nova_cell0;
#grants not needed in test.
#then where you have ocata run:
#[root@db-upgrade-test ~]# nova-manage  --config-file /root/ocata/nova.conf cell_v2 map_cell0 
#[root@db-upgrade-test ~]# nova-manage  --config-file /root/ocata/nova.conf cell_v2 create_cell --name cell1 --transport-url rabbit://USER:PASSWORD@10.A.1.1:5672/
#[root@db-upgrade-test ~]# nova-manage --debug --config-file /root/ocata/nova.conf cell_v2 discover_hosts
#[root@db-upgrade-test ~]# nova-manage  --config-file /root/ocata/nova.conf db sync
#[root@db-upgrade-test ~]# nova-manage  --config-file /root/ocata/nova.conf api_db sync
#
### While you're at it also consider archiving deleted resources
#
# keystone-manage --config-file /root/queens/keystone.conf  token_flush
# barbican-manage --debug db clean -V --min-days 50
# nova-manage --debug --config-file /root/queens/nova.conf db archive_deleted_rows
# glance-manage --config-file /root/queens/glance-api.conf db purge --age_in_days 50
#   2019-03-18 08:41:32.014 5153 ERROR glance.db.sqlalchemy.api [req-9ad4a1ee-bc37-4c30-9517-d8bf456f4fe5 - - - - -] DBError detected when purging from images: (pymysql.err.IntegrityError) (1451, u'Cannot delete or update a parent row: a foreign key constraint fails (`glance`.`image_locations`, CONSTRAINT `image_locations_ibfk_1` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`))') [SQL: u'DELETE FROM images WHERE images.id in (SELECT T1.id FROM (SELECT images.id \nFROM images \nWHERE images.deleted_at < %(deleted_at_1)s ORDER BY images.deleted_at \n LIMIT %(param_1)s) as T1)'] [parameters: {u'deleted_at_1': datetime.datetime(2019, 1, 27, 8, 41, 31, 698376), u'param_1': 100}] (Background on this error at: http://sqlalche.me/e/gkpj): DBReferenceError: (pymysql.err.IntegrityError) (1451, u'Cannot delete or update a parent row: a foreign key constraint fails (`glance`.`image_locations`, CONSTRAINT `image_locations_ibfk_1` FOREIGN KEY (`image_id`) REFERENCES `images` (`id`))') [SQL: u'DELETE FROM images WHERE images.id in (SELECT T1.id FROM (SELECT images.id \nFROM images \nWHERE images.deleted_at < %(deleted_at_1)s ORDER BY images.deleted_at \n LIMIT %(param_1)s) as T1)'] [parameters: {u'deleted_at_1': datetime.datetime(2019, 1, 27, 8, 41, 31, 698376), u'param_1': 100}] (Background on this error at: http://sqlalche.me/e/gkpj)
# second time it worked out??
# glance-manage --config-file /root/queens/glance-api.conf db purge --age_in_days 50
# cinder-manage --config-file /root/queens/cinder.conf db purge 50
# heat-manage --config-file /root/queens/heat.conf  purge_deleted
#

## Fix needed to one environment's keystone database:
# 2019-03-07 14:31:30.375 7433 INFO migrate.versioning.api [-] 14 -> 15... 
# 2019-03-07 14:31:30.387 7433 CRITICAL keystone [-] DBDataError: (pymysql.err.DataError) (1265, u"Data truncated for column 'domain_id' at row 14") [SQL: u'\nALTER TABLE user CHANGE COLUMN domain_id domain_id VARCHAR(64) NOT NULL']
#
## For some reason the cinder user when the domain_id column was created did not get its domain?..
# mysql > use transactions plz; 
# mysql > update user set domain_id = "default" where domain_id is NULL;
# mysql > commit plz;
# Query OK, 1 row affected (0.00 sec)
#

###########
#
    - name: fail if there's a nova_cell0 database - maybe this script has been run already?
      stat:
        path: "/var/lib/mysql/nova_cell0"
      register: reg_cell0
      delegate_to: localhost
      failed_when: reg_cell0.stat.exists == True

    - name: fail if there's a cell_mappings.frm file for nova_api database - maybe this script has been run already?
      stat:
        path: "/var/lib/mysql/nova_api/cell_mappings.frm"
      register: reg_cell_mappings
      failed_when: reg_cell_mappings.stat.exists == True

    - name: list mounts
      command: mount
      no_log: True
      register: reg_mounts
      delegate_to: localhost
      changed_when: False

    - debug:
        var: reg_mounts
        verbosity: 1
      delegate_to: localhost

    - name: fail if rpm_{{ osv }} is not in mounts - run the num_{{osv}}_yum.yml from db_test/ directory
      assert: 
        that: "'rpm_{{ osv }}' in reg_mounts.stdout"
      delegate_to: localhost

# prep database
#

    - name: create nova_cell0 mysql database
      tags: ['db_cell0']
      shell: "echo 'create database nova_cell0;' | mysql"
      register: reg_cell0_create
      #rc 1 for "db already exists"
      failed_when: reg_cell0_create.rc != 1

    - name: keystone set user domain to default if it is NULL
      tags: ['db_null']
      shell: "echo 'update user set domain_id = 'default' where domain_id is NULL;'|mysql keystone"

- name: DB cell creation and db purging with openstack commands
  hosts: chroot_ocata
  connection: chroot
  gather_facts: no
  vars_files: 
    - db_test/purges.yml

  tasks:
    - name: print
      debug:
        var: nova_cells
    - name: setup for _testing_ only nova cells
      tags: ['db_cells']
      command: "{{ item }}"
      loop: "{{ nova_cells }}"
      register: reg_nova_cells
      failed_when: (reg_nova_cells.rc != 0) and (reg_nova_cells.rc != 1) and (reg_nova_cells.rc != 2)

    - name: purge deleted data from dbs
      tags: ['db_purge']
      command: "{{ item }}"
      with_items: "{{ db_purges }}"
      register: reg_db_purges
      failed_when: (reg_db_purges.rc != 0) and (reg_db_purges.rc != 1)

