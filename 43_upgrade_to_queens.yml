---
# This play updatets the Nova DB to queens.

- name: Upgrade to queens using software in chroot_queens
  hosts: chroot_queens
  gather_facts: no
  connection: chroot
  vars_files: db_test/queens_vars.yml
  tasks:

############
#
    - name: fail if there's no cell0 database see comments in this playbook for minimal steps to setup cells
      stat:
        path: "/var/lib/mysql/cell0"
      register: reg_cell0
      delegate_to: localhost
      failed_when: reg_cell0.stat.exists != True

    - name: fail if there's no cell_mappings.frm file for nova_api database
      stat:
        path: "/var/lib/mysql/nova_api/cell_mappings.frm"
      register: reg_cell_mappings
      delegate_to: localhost
      failed_when: reg_cell_mappings.stat.exists != True

    - name: Use rpm installed version to Check that all modules except barbican can do a version check
      shell: "{{ item.test_command }} --config-file {{ virtualenv }}/{{ item.config_file }} {{ item.test_param }}"
      changed_when: False
      with_items: "{{ other_services }}"
      register: reg_post3
      tags: [check_version]
      when: item.name != "barbican"
      loop_control:
        label: "{{ item.name }}"

    - name: Use rpm installed version to Check that barbican can do a version check
      shell: "{{ item.test_command }} {{ item.test_param }}"
      changed_when: False
      with_items: "{{ other_services }}"
      register: reg_post4
      tags: [check_version]
      when: item.name == "barbican"
      loop_control:
        label: "{{ item.name }}"

    - name: print reg_post3
      debug:
        var: reg_post3
        verbosity: 2
    - name: print reg_post4
      debug:
        var: reg_post4
        verbosity: 2

# upgrade
    - name: Use rpm installed version to Upgrade that all modules except barbican
      shell: "{{ item.test_command }} --config-file {{ virtualenv }}/{{ item.config_file }} {{ item.upgrade_command }}"
      changed_when: False
      with_items: "{{ other_services }}"
      tags: [check_version]
      when: item.name != "barbican"
      loop_control:
        label: "{{ item.name }}"

    - name: Use rpm installed version to Upgrade barbican
      shell: "{{ item.test_command }} {{ item.upgrade_command }}"
      changed_when: False
      with_items: "{{ other_services }}"
      tags: [check_version]
      when: item.name == "barbican"
      loop_control:
        label: "{{ item.name }}"

# check version after

    - name: Use rpm installed version to Check that all modules except barbican can do a version check
      shell: "{{ item.test_command }} --config-file {{ virtualenv }}/{{ item.config_file }} {{ item.test_param }}"
      changed_when: False
      with_items: "{{ other_services }}"
      register: reg_post1
      tags: [check_version]
      when: item.name != "barbican"
      loop_control:
        label: "{{ item.name }}"

    - name: Use rpm installed version to Check that barbican can do a version check
      shell: "{{ item.test_command }} {{ item.test_param }}"
      changed_when: False
      register: reg_post2
      with_items: "{{ other_services }}"
      tags: [check_version]
      when: item.name == "barbican"
      loop_control:
        label: "{{ item.name }}"

    - name: print reg_post1
      debug:
        var: reg_post1
        verbosity: 2
    - name: print reg_post2
      debug:
        var: reg_post2
        verbosity: 2
